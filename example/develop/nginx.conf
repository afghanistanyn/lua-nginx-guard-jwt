# -*- mode: nginx -*-

events {
    worker_connections 1024;
}

env JWT_SECRET;

http {
    server {
        listen 80;
        server_name localhost;

        location = / {
            access_by_lua '
              local j = require "guardjwt"
              j.GuardJWT.raw_auth(
                -- Retrieve globa ngx object
                ngx,
                -- Mapping between Claims key and HTTP request headers
                {
                  foo = {
                    mandatory = false,
                    header = "X-DM-Foo"
                  }
                },
                -- Token is mandatory, throw an exception if not present
                true,
                -- Secret to decode the JWT Token
                "guardjwt"
              )
            ';

            proxy_pass http://target/;
        }

        location = /lua {
            access_by_lua '
              local j = require "guardjwt"
              -- Secret value will be guessed from the
              -- environment variable JWT_SECRET
              j.GuardJWT.auth(
                -- Mapping between Claims key and HTTP request headers
                {
                  foo = {
                    mandatory = false,
                    header = "X-DM-Foo"
                  }
                }
              )
            ';

            proxy_pass http://target/;
        }
    }
}
